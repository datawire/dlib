// Code generated by "./convenience.go.gen". DO NOT EDIT.

package dlog

import (
	"context"
)

func Error(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelError, args...)
}
func Errorln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelError, args...)
}
func Errorf(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelError, format, args...)
}
func Warn(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelWarn, args...)
}
func Warnln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelWarn, args...)
}
func Warnf(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelWarn, format, args...)
}
func Info(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelInfo, args...)
}
func Infoln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelInfo, args...)
}
func Infof(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelInfo, format, args...)
}
func Debug(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelDebug, args...)
}
func Debugln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelDebug, args...)
}
func Debugf(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelDebug, format, args...)
}
func Trace(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelTrace, args...)
}
func Traceln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelTrace, args...)
}
func Tracef(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelTrace, format, args...)
}
func Print(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelInfo, args...)
}
func Println(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelInfo, args...)
}
func Printf(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelInfo, format, args...)
}
func Warning(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Log(LogLevelWarn, args...)
}
func Warningln(ctx context.Context, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logln(LogLevelWarn, args...)
}
func Warningf(ctx context.Context, format string, args ...interface{}) {
	l := getLogger(ctx)
	l.Helper()
	l.Logf(LogLevelWarn, format, args...)
}
