version: 2.1

orbs:
  windows: circleci/windows@2.4.0

commands:

  "dirty-check":
    steps:
      - run:
          name: "Dirty check"
          command: |
            # On Windows, `git status` doesn't record no-op
            # line-ending changes in to the index, so things show as
            # dirty even if they aren't.  Trying to `add` them does
            # trigger the appropriate index update.  So do a `git add`
            # *before* the `git status --porcelain` to work around
            # Windows being terrible; we'd otherwise put the `git add`
            # inside of the `if` block to help generate better output
            # for `git diff`.
            git add .
            if [[ -n "$(git status --porcelain)" ]]; then
               PAGER= git diff --cached
               exit 1
            fi

  "install-go":
    parameters:
      version:
        type: string
        default: "1.15"
    steps:
      - run:
          name: "Install Go << parameters.version >>"
          command: |
            set -x
            if [[ $OS == Windows_NT ]]; then
              curl https://dl.google.com/go/go<< parameters.version >>.windows-amd64.zip -o /tmp/go.zip
              mv /c/go /c/go-112
              unzip -q /tmp/go.zip -d /c/
            else
              curl https://dl.google.com/go/go<< parameters.version >>.$(uname -s | tr A-Z a-z)-amd64.tar.gz -o /tmp/go.tar.gz
              tar -C /tmp -xzf /tmp/go.tar.gz
              echo 'export PATH=/tmp/go/bin:$PATH' >> "$BASH_ENV"
              if [ -z "$(/tmp/go/bin/go env GOPROXY)" ]; then
                echo 'export GOPROXY=https://proxy.golang.org' >> "$BASH_ENV"
              fi
              . "$BASH_ENV"
            fi
            go version

jobs:

  "test-linux":
    docker:
    - image: golang:1.15
    resource_class: small
    steps:
    - checkout
    - run: make test
    - run:
        name: "Generate code-coverage report"
        command: |
          set -e
          if test -e dlib.cov; then
            make .circleci/goveralls
            .circleci/goveralls -coverprofile=dlib.cov -service=circle-ci -repotoken=$COVERALLS_TOKEN
          fi
        when: always

  "test-darwin":
    macos:
      xcode: "12.4.0"
    steps:
    - install-go
    - checkout
    - run: make test

  "test-windows":
    executor:
      name: windows/default
      shell: bash.exe
    steps:
    - install-go
    - checkout
    - run: go test -race ./...

  "lint":
    docker:
    - image: golang:1.15
    resource_class: small
    steps:
    - checkout
    - run: make lint

  "generate":
    docker:
    - image: golang:1.15
    resource_class: small
    steps:
    - checkout
    - run: make generate-clean
    - run: make generate
    - dirty-check

workflows:

  "dlib":
    jobs:
    - "test-linux"
    - "test-darwin"
    - "test-windows"
    - "lint"
    - "generate"
